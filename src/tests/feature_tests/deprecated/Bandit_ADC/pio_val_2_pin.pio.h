// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------- //
// val2pin //
// ------- //

#define val2pin_wrap_target 0
#define val2pin_wrap 0

static const uint16_t val2pin_program_instructions[] = {
            //     .wrap_target
    0x6001, //  0: out    pins, 1                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program val2pin_program = {
    .instructions = val2pin_program_instructions,
    .length = 1,
    .origin = -1,
};

static inline pio_sm_config val2pin_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + val2pin_wrap_target, offset + val2pin_wrap);
    return c;
}

static inline void val2pin_program_init(PIO pio, uint sm, uint offset, uint pin) {
   pio_gpio_init(pio, pin);
   pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
   pio_sm_config c = val2pin_program_get_default_config(offset);
   sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
   sm_config_set_out_pins(&c, pin, 1);
   sm_config_set_out_shift(&c, true, true, 1);
   pio_sm_init(pio, sm, offset, &c);
   pio_sm_set_enabled(pio, sm, true);
}

#endif

